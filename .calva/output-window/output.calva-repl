; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
#'user/co2-estimate
clj꞉user꞉> 
#'user/co2-estimate
clj꞉user꞉> 
470
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
nil
clj꞉user꞉> 
#'user/co2-estimate
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
  estimate = 382 + ((Year -2006)*2)
nil
clj꞉user꞉> 
470
clj꞉user꞉> 
#'user/co2-estimate
clj꞉user꞉> 
470
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
  estimate = 382 + ((Year -2006)*2)
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
  estimate = 382 + ((Year -2006)*2)
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
  estimate = 382 + ((Year -2006)*2)
nil
clj꞉user꞉> 
-------------------------
user/co2-estimate
([year])
  estimate = 382 + ((Year -2006)*2)
nil
clj꞉user꞉> 
; Syntax error compiling at (d:\Code\compilers\the clojure workshop\chap01\act01.02.clj:16:19).
; Unable to resolve symbol: base-year in this context
clj꞉user꞉> 
; Syntax error compiling at (d:\Code\compilers\the clojure workshop\chap01\act01.02.clj:16:19).
; Unable to resolve symbol: base-year in this context
clj꞉user꞉> 
#'user/base-co2
clj꞉user꞉> 
#'user/base-year
clj꞉user꞉> 
#'user/co1-est2
clj꞉user꞉> 
2050
clj꞉user꞉> 
470
clj꞉user꞉> 
; Syntax error compiling at (d:\Code\compilers\the clojure workshop\chap01\act01.03.clj:12:32).
; Unable to resolve symbol: captalize in this context
clj꞉user꞉> 
#'user/captalize
clj꞉user꞉> 
#'user/reverse-str
clj꞉user꞉> 
#'user/reverse-str
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
(\H \E \L \L \O \, \space \I \space \T \E \L \L \space \Y \A)
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
; Execution error (ClassCastException) at user/meditate (REPL:10).
; class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader 'bootstrap')
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
"HELLO, I TELL YA"
clj꞉user꞉> 
5
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
"HELLO"
clj꞉user꞉> 
10
clj꞉user꞉> 
"Hello"
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
(\o \l \l \e \h)
clj꞉user꞉> 
#'user/reverse-str
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
"(\\o \\l \\l \\e \\h)"
clj꞉user꞉> 
#'user/reverse-str
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
"olleh"
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
"olleh"
clj꞉user꞉> 
"invalid argument"
clj꞉user꞉> 
; Execution error (ClassCastException) at user/meditate (REPL:10).
; class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader 'bootstrap')
clj꞉user꞉> 
; Execution error (ClassCastException) at user/meditate (REPL:10).
; class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader 'bootstrap')
clj꞉user꞉> 
"HELLO, I TELL YA"
clj꞉user꞉> 
"HELLO, I TELL YA"
clj꞉user꞉> 
"HELLO, I TELL YA"
clj꞉user꞉> 
#'user/meditate
clj꞉user꞉> 
"invalid argument"
clj꞉user꞉> 
